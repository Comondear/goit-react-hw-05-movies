{"version":3,"file":"static/js/123.49d1c04c.chunk.js","mappings":"mPAKe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACcH,GACXI,MAAK,SAAAC,GAAQ,OAAIN,EAAWM,EAASC,QAAxB,GACjB,GAAE,CAACN,KAGF,8BACGF,EAAQS,OAAS,GAChB,SAAC,KAAD,UACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,4BACE,sCACU,0BAAOD,QAEjB,uBAAIC,MAJIF,EADC,OAUf,cAAGG,KAAK,mDAIf,C,uBCjCD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOlB,KAAKa,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,wJC7BMC,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQlC,EADR,QAEkBoC,GAFlB,iCAGYpC,EAASqC,OAHrB,gDAIMjB,QAAQT,OAAO,IAAI2B,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOP,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,GAC9D,CAEM,SAASS,EAAgBC,GAC9B,OAAOT,EAAY,GAAD,OACbF,EADa,+BACkBW,EADlB,oBACmCV,EADnC,8CAGnB,CAEM,SAASW,EAAW/C,GACzB,OAAOqC,EAAY,GAAD,OAAIF,EAAJ,kBAAsBnC,EAAtB,oBAAyCoC,GAC5D,CAEM,SAASY,EAAQhD,GACtB,OAAOqC,EAAY,GAAD,OAAIF,EAAJ,kBAAsBnC,EAAtB,4BAAiDoC,GACpE,CAEM,SAASa,EAAWjD,GACzB,OAAOqC,EAAY,GAAD,OACbF,EADa,kBACKnC,EADL,4BACgCoC,EADhC,WAGnB,C","sources":["pages/Reviews.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesApi from '../services/api';\nimport { ReviewsStyle } from 'components/Styles';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesApi\n      .getReviews(movieId)\n      .then(response => setReviews(response.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsStyle>\n          {reviews.map(({ id, author, content }) => (\n            <div key={id}>\n              <h3>\n                Autor : <span>{author}</span>\n              </h3>\n              <p>{content}</p>\n            </div>\n          ))}\n        </ReviewsStyle>\n      ) : (\n        <p text=\"We donâ€™t have any reviews for this movie\" />\n      )}\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b4056054434cdd7bb4744d2179c9434f';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrending() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function getMovieId(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport function getCast(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","moviesApi","then","response","results","length","map","id","author","content","text","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","fetchMovies","url","config","fetch","ok","json","Error","getTrending","getMoviesSearch","query","getMovieId","getCast","getReviews"],"sourceRoot":""}
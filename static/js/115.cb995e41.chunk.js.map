{"version":3,"file":"static/js/115.cb995e41.chunk.js","mappings":"6PAYe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YACE,SAAAC,GACEC,EAAAA,GAAkBJ,GAASK,MAAK,SAAAC,GAAQ,OAAIP,EAASO,EAASC,KAAtB,GACzC,GACD,CAACP,IAGH,IAAMQ,EAAa,SAAAC,GACjB,OAAqB,OAAjBA,EACI,GAAN,OAAUC,GAEN,kCAAN,OAAyCD,EAC1C,EAED,OACE,8BACGX,IACC,SAAC,KAAD,UACGA,EAAMa,KAAI,gBAAGC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,aAAcI,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACT,UAAC,KAAD,YACE,gBAAKC,IAAG,UAAKP,EAAWC,IAAiBO,IAAKH,EAAMI,MAAM,SAC1D,SAAC,KAAD,UAAWJ,KACX,UAAC,KAAD,WACG,IADH,gBAEc,UAAC,KAAD,eAAYC,EAAZ,OAAmC,SALpCF,EADN,OAcpB,C,uBChDD,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOtB,KAAKiB,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,wJC7BMC,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQtC,EADR,QAEkBwC,GAFlB,iCAGYxC,EAASyC,OAHrB,gDAIMjB,QAAQT,OAAO,IAAI2B,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOP,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,GAC9D,CAEM,SAASS,EAAgBC,GAC9B,OAAOT,EAAY,GAAD,OACbF,EADa,+BACkBW,EADlB,oBACmCV,EADnC,8CAGnB,CAEM,SAASW,EAAWpD,GACzB,OAAO0C,EAAY,GAAD,OAAIF,EAAJ,kBAAsBxC,EAAtB,oBAAyCyC,GAC5D,CAEM,SAASY,EAAQrD,GACtB,OAAO0C,EAAY,GAAD,OAAIF,EAAJ,kBAAsBxC,EAAtB,4BAAiDyC,GACpE,CAEM,SAASa,EAAWtD,GACzB,OAAO0C,EAAY,GAAD,OACbF,EADa,kBACKxC,EADL,4BACgCyC,EADhC,WAGnB,C","sources":["pages/Cast.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesApi from '../services/api';\nimport defaultImg from '../components/Images/defaultImg.jpg';\nimport {\n  CastGallery,\n  CastCard,\n  CastName,\n  CastP,\n  CastSpan,\n} from '../components/Styles';\n\nexport default function Cast() {\n  const [casts, setCasts] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(\n    e => {\n      moviesApi.getCast(movieId).then(response => setCasts(response.cast));\n    },\n    [movieId]\n  );\n\n  const viewPoster = profile_path => {\n    if (profile_path === null) {\n      return `${defaultImg}`;\n    }\n    return `https://image.tmdb.org/t/p/w300${profile_path}`;\n  };\n\n  return (\n    <>\n      {casts && (\n        <CastGallery>\n          {casts.map(({ id, profile_path, name, character }) => (\n            <CastCard key={id}>\n              <img src={`${viewPoster(profile_path)}`} alt={name} width=\"300\" />\n              <CastName>{name}</CastName>\n              <CastP>\n                {' '}\n                Character : <CastSpan> {character} </CastSpan>{' '}\n              </CastP>\n            </CastCard>\n          ))}\n        </CastGallery>\n      )}\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b4056054434cdd7bb4744d2179c9434f';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function getTrending() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function getMovieId(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport function getCast(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}\n"],"names":["Cast","useState","casts","setCasts","movieId","useParams","useEffect","e","moviesApi","then","response","cast","viewPoster","profile_path","defaultImg","map","id","name","character","src","alt","width","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","fetchMovies","url","config","fetch","ok","json","Error","getTrending","getMoviesSearch","query","getMovieId","getCast","getReviews"],"sourceRoot":""}